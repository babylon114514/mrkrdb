(function(window,angular,undefined){"use strict";angular.module("angularLocalStorage",["ngCookies"]).factory("storage",["$parse","$cookieStore","$window","$log",function($parse,$cookieStore,$window,$log){var storage=typeof $window.localStorage==="undefined"?undefined:$window.localStorage;var supported=typeof storage!=="undefined";var privateMethods={parseValue:function(res){var val;try{val=angular.fromJson(res);if(typeof val==="undefined"){val=res}if(val==="true"){val=true}if(val==="false"){val=false}if($window.parseFloat(val)===val&&!angular.isObject(val)){val=$window.parseFloat(val)}}catch(e){val=res}return val}};var publicMethods={set:function(key,value){if(!supported){try{$cookieStore.put(key,value);return value}catch(e){$log.log("Local Storage not supported, make sure you have angular-cookies enabled.")}}var saver=angular.toJson(value);storage.setItem(key,saver);return privateMethods.parseValue(saver)},get:function(key){if(!supported){try{return privateMethods.parseValue($.cookie(key))}catch(e){return null}}var item=storage.getItem(key);return privateMethods.parseValue(item)},remove:function(key){if(!supported){try{$cookieStore.remove(key);return true}catch(e){return false}}storage.removeItem(key);return true},bind:function($scope,key,opts){var defaultOpts={defaultValue:"",storeName:""};if(angular.isString(opts)){opts=angular.extend({},defaultOpts,{defaultValue:opts})}else{opts=angular.isUndefined(opts)?defaultOpts:angular.extend(defaultOpts,opts)}var storeName=opts.storeName||key;if(!publicMethods.get(storeName)){publicMethods.set(storeName,opts.defaultValue)}$parse(key).assign($scope,publicMethods.get(storeName));$scope.$watch(key,function(val){if(angular.isDefined(val)){publicMethods.set(storeName,val)}},true);return publicMethods.get(storeName)},unbind:function($scope,key,storeName){storeName=storeName||key;$parse(key).assign($scope,null);$scope.$watch(key,function(){});publicMethods.remove(storeName)},clearAll:function(){storage.clear()}};return publicMethods}])})(window,window.angular);